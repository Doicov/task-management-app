/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'Boolean_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'Boolean_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; }; defaultValue: null }]; };
    'Int': unknown;
    'String': unknown;
    'String_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_ilike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_iregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_like'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nilike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_niregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nlike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nsimilar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_regex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_similar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'cursor_ordering': { name: 'cursor_ordering'; enumValues: 'ASC' | 'DESC'; };
    'folders': { kind: 'OBJECT'; name: 'folders'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'image_url': { name: 'image_url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'folders_aggregate': { kind: 'OBJECT'; name: 'folders_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'folders_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'folders'; ofType: null; }; }; }; } }; }; };
    'folders_aggregate_fields': { kind: 'OBJECT'; name: 'folders_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'folders_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'folders_min_fields'; ofType: null; } }; }; };
    'folders_bool_exp': { kind: 'INPUT_OBJECT'; name: 'folders_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'folders_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'folders_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'folders_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'created_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'image_url'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'folders_constraint': { name: 'folders_constraint'; enumValues: 'folders_pkey'; };
    'folders_insert_input': { kind: 'INPUT_OBJECT'; name: 'folders_insert_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'image_url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'folders_max_fields': { kind: 'OBJECT'; name: 'folders_max_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'image_url': { name: 'image_url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'folders_min_fields': { kind: 'OBJECT'; name: 'folders_min_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'image_url': { name: 'image_url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'folders_mutation_response': { kind: 'OBJECT'; name: 'folders_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'folders'; ofType: null; }; }; }; } }; }; };
    'folders_on_conflict': { kind: 'INPUT_OBJECT'; name: 'folders_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'folders_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'folders_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'folders_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'folders_order_by': { kind: 'INPUT_OBJECT'; name: 'folders_order_by'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'image_url'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'folders_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'folders_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'folders_select_column': { name: 'folders_select_column'; enumValues: 'created_at' | 'id' | 'image_url' | 'name'; };
    'folders_set_input': { kind: 'INPUT_OBJECT'; name: 'folders_set_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'image_url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'folders_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'folders_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'folders_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'folders_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'folders_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'image_url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'folders_update_column': { name: 'folders_update_column'; enumValues: 'created_at' | 'id' | 'image_url' | 'name'; };
    'folders_updates': { kind: 'INPUT_OBJECT'; name: 'folders_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'folders_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'folders_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'mutation_root': { kind: 'OBJECT'; name: 'mutation_root'; fields: { 'delete_folders': { name: 'delete_folders'; type: { kind: 'OBJECT'; name: 'folders_mutation_response'; ofType: null; } }; 'delete_folders_by_pk': { name: 'delete_folders_by_pk'; type: { kind: 'OBJECT'; name: 'folders'; ofType: null; } }; 'delete_tasks': { name: 'delete_tasks'; type: { kind: 'OBJECT'; name: 'tasks_mutation_response'; ofType: null; } }; 'delete_tasks_by_pk': { name: 'delete_tasks_by_pk'; type: { kind: 'OBJECT'; name: 'tasks'; ofType: null; } }; 'insert_folders': { name: 'insert_folders'; type: { kind: 'OBJECT'; name: 'folders_mutation_response'; ofType: null; } }; 'insert_folders_one': { name: 'insert_folders_one'; type: { kind: 'OBJECT'; name: 'folders'; ofType: null; } }; 'insert_tasks': { name: 'insert_tasks'; type: { kind: 'OBJECT'; name: 'tasks_mutation_response'; ofType: null; } }; 'insert_tasks_one': { name: 'insert_tasks_one'; type: { kind: 'OBJECT'; name: 'tasks'; ofType: null; } }; 'update_folders': { name: 'update_folders'; type: { kind: 'OBJECT'; name: 'folders_mutation_response'; ofType: null; } }; 'update_folders_by_pk': { name: 'update_folders_by_pk'; type: { kind: 'OBJECT'; name: 'folders'; ofType: null; } }; 'update_folders_many': { name: 'update_folders_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'folders_mutation_response'; ofType: null; }; } }; 'update_tasks': { name: 'update_tasks'; type: { kind: 'OBJECT'; name: 'tasks_mutation_response'; ofType: null; } }; 'update_tasks_by_pk': { name: 'update_tasks_by_pk'; type: { kind: 'OBJECT'; name: 'tasks'; ofType: null; } }; 'update_tasks_many': { name: 'update_tasks_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'tasks_mutation_response'; ofType: null; }; } }; }; };
    'order_by': { name: 'order_by'; enumValues: 'asc' | 'asc_nulls_first' | 'asc_nulls_last' | 'desc' | 'desc_nulls_first' | 'desc_nulls_last'; };
    'query_root': { kind: 'OBJECT'; name: 'query_root'; fields: { 'folders': { name: 'folders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'folders'; ofType: null; }; }; }; } }; 'folders_aggregate': { name: 'folders_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'folders_aggregate'; ofType: null; }; } }; 'folders_by_pk': { name: 'folders_by_pk'; type: { kind: 'OBJECT'; name: 'folders'; ofType: null; } }; 'tasks': { name: 'tasks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'tasks'; ofType: null; }; }; }; } }; 'tasks_aggregate': { name: 'tasks_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'tasks_aggregate'; ofType: null; }; } }; 'tasks_by_pk': { name: 'tasks_by_pk'; type: { kind: 'OBJECT'; name: 'tasks'; ofType: null; } }; }; };
    'subscription_root': { kind: 'OBJECT'; name: 'subscription_root'; fields: { 'folders': { name: 'folders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'folders'; ofType: null; }; }; }; } }; 'folders_aggregate': { name: 'folders_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'folders_aggregate'; ofType: null; }; } }; 'folders_by_pk': { name: 'folders_by_pk'; type: { kind: 'OBJECT'; name: 'folders'; ofType: null; } }; 'folders_stream': { name: 'folders_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'folders'; ofType: null; }; }; }; } }; 'tasks': { name: 'tasks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'tasks'; ofType: null; }; }; }; } }; 'tasks_aggregate': { name: 'tasks_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'tasks_aggregate'; ofType: null; }; } }; 'tasks_by_pk': { name: 'tasks_by_pk'; type: { kind: 'OBJECT'; name: 'tasks'; ofType: null; } }; 'tasks_stream': { name: 'tasks_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'tasks'; ofType: null; }; }; }; } }; }; };
    'tasks': { kind: 'OBJECT'; name: 'tasks'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'due_date': { name: 'due_date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'folder_id': { name: 'folder_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'tasks_aggregate': { kind: 'OBJECT'; name: 'tasks_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'tasks_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'tasks'; ofType: null; }; }; }; } }; }; };
    'tasks_aggregate_fields': { kind: 'OBJECT'; name: 'tasks_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'tasks_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'tasks_min_fields'; ofType: null; } }; }; };
    'tasks_bool_exp': { kind: 'INPUT_OBJECT'; name: 'tasks_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'tasks_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'tasks_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'tasks_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'created_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'due_date'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'folder_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'INPUT_OBJECT'; name: 'Boolean_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'tasks_constraint': { name: 'tasks_constraint'; enumValues: 'tasks_pkey'; };
    'tasks_insert_input': { kind: 'INPUT_OBJECT'; name: 'tasks_insert_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'due_date'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'folder_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'tasks_max_fields': { kind: 'OBJECT'; name: 'tasks_max_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'due_date': { name: 'due_date'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'folder_id': { name: 'folder_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'tasks_min_fields': { kind: 'OBJECT'; name: 'tasks_min_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'due_date': { name: 'due_date'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'folder_id': { name: 'folder_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'tasks_mutation_response': { kind: 'OBJECT'; name: 'tasks_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'tasks'; ofType: null; }; }; }; } }; }; };
    'tasks_on_conflict': { kind: 'INPUT_OBJECT'; name: 'tasks_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'tasks_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'tasks_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'tasks_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'tasks_order_by': { kind: 'INPUT_OBJECT'; name: 'tasks_order_by'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'due_date'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'folder_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'tasks_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'tasks_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'tasks_select_column': { name: 'tasks_select_column'; enumValues: 'created_at' | 'description' | 'due_date' | 'folder_id' | 'id' | 'status' | 'title'; };
    'tasks_set_input': { kind: 'INPUT_OBJECT'; name: 'tasks_set_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'due_date'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'folder_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'tasks_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'tasks_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'tasks_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'tasks_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'tasks_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'due_date'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'folder_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'tasks_update_column': { name: 'tasks_update_column'; enumValues: 'created_at' | 'description' | 'due_date' | 'folder_id' | 'id' | 'status' | 'title'; };
    'tasks_updates': { kind: 'INPUT_OBJECT'; name: 'tasks_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'tasks_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'tasks_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'timestamp': unknown;
    'timestamp_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'timestamp_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamp'; ofType: null; }; }; }; defaultValue: null }]; };
    'timestamptz': unknown;
    'timestamptz_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; }; }; defaultValue: null }]; };
    'uuid': unknown;
    'uuid_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; }; defaultValue: null }]; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'query_root';
  mutation: 'mutation_root';
  subscription: 'subscription_root';
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}